#include <iostream>
#include <fstream>
#include <sstream>
#include <vector>
#include <algorithm>

struct PrecipitationData {
    int day;
    int month;
    float amount;
    std::string characteristic;
};

void readDataFromFile(std::vector<PrecipitationData>& data, const std::string& filename) {
    std::ifstream file(filename);
    std::string line;
    
    while (std::getline(file, line)) {
        std::istringstream iss(line);
        PrecipitationData item;
        iss >> item.day >> item.month >> item.amount;
        std::getline(iss, item.characteristic);
        data.push_back(item);
    }
    
    file.close();
}

void findRainyDays(const std::vector<PrecipitationData>& data) {
    for (const auto& item : data) {
        if (item.characteristic == "дождь") {
            std::cout << item.day << " " << item.month << std::endl;
        }
    }
}

void findDaysWithLessPrecipitation(const std::vector<PrecipitationData>& data, float threshold) {
    for (const auto& item : data) {
        if (item.amount < threshold) {
            std::cout << item.day << " " << item.month << std::endl;
        }
    }
}

bool compareByAmountAsc(const PrecipitationData& a, const PrecipitationData& b) {
    return a.amount < b.amount;
}

bool compareByCharacteristic(const PrecipitationData& a, const PrecipitationData& b) {
    if (a.characteristic == b.characteristic) {
        if (a.month == b.month) {
            return a.day < b.day;
        } else {
            return a.month < b.month;
        }
    } else {
        return a.characteristic < b.characteristic;
    }
}

void sortDataByAmountAsc(std::vector<PrecipitationData>& data) {
    std::sort(data.begin(), data.end(), compareByAmountAsc);
}

void sortDataByCharacteristic(std::vector<PrecipitationData>& data) {
    std::sort(data.begin(), data.end(), compareByCharacteristic);
}

int main() {
    std::vector<PrecipitationData> data;
    
    readDataFromFile(data, "filename.txt");
    
    findRainyDays(data);
    
    findDaysWithLessPrecipitation(data, 1.5);
    
    sortDataByAmountAsc(data);
    
    sortDataByCharacteristic(data);
    
    return 0;
}
